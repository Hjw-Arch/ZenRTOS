Component: ARM Compiler 5.06 update 3 (build 300) Tool: armlink [4d35c9]

==============================================================================

Section Cross References

    main.o(i.main) refers to main.o(i.rtosInit) for rtosInit
    main.o(i.main) refers to rt_task.o(i.getHighestReadyTask) for getHighestReadyTask
    main.o(i.main) refers to rt_cpu.o(i.setSysTick) for setSysTick
    main.o(i.main) refers to switch.o(i.runFirstTask2) for runFirstTask2
    main.o(i.main) refers to rt_task.o(.data) for nextTask
    main.o(i.rtosInit) refers to lock.o(i.schedLockInit) for schedLockInit
    main.o(i.rtosInit) refers to bitmap.o(i.bitmapInit) for bitmapInit
    main.o(i.rtosInit) refers to rt_task.o(i.taskDelayedListInit) for taskDelayedListInit
    main.o(i.rtosInit) refers to rt_list.o(i.listHeadInit) for listHeadInit
    main.o(i.rtosInit) refers to application.o(i.appInit) for appInit
    main.o(i.rtosInit) refers to rt_timer.o(i.timerFuncInit) for timerFuncInit
    main.o(i.rtosInit) refers to rt_task.o(i.taskInit) for taskInit
    main.o(i.rtosInit) refers to rt_task.o(.data) for taskPriorityBitmap
    main.o(i.rtosInit) refers to rt_task.o(.bss) for taskTable
    main.o(i.rtosInit) refers to rt_idletask.o(.bss) for idleTaskEnv
    main.o(i.rtosInit) refers to rt_idletask.o(i.idleTaskEntry) for idleTaskEntry
    main.o(i.rtosInit) refers to rt_idletask.o(.data) for idleTask
    switch.o(.emb_text) refers to rt_task.o(.data) for currentTask
    switch.o(i.runFirstTask2) refers to rt_idletask.o(.bss) for idleTaskEnv
    switch.o(i.runFirstTask2) refers to rt_task.o(.data) for currentTask
    lock.o(i.lockSched) refers to lock.o(i.enterCritical) for enterCritical
    lock.o(i.lockSched) refers to lock.o(i.leaveCritical) for leaveCritical
    lock.o(i.lockSched) refers to lock.o(.data) for schedLockCount
    lock.o(i.schedLockInit) refers to lock.o(.data) for schedLockCount
    lock.o(i.unlockSched) refers to lock.o(i.enterCritical) for enterCritical
    lock.o(i.unlockSched) refers to rt_task.o(i.taskSched) for taskSched
    lock.o(i.unlockSched) refers to lock.o(i.leaveCritical) for leaveCritical
    lock.o(i.unlockSched) refers to lock.o(.data) for schedLockCount
    bitmap.o(i.bitmapClear) refers to assert.o(.text) for __aeabi_assert
    bitmap.o(i.bitmapGetFirstSet) refers to bitmap.o(i.bitmapPosCount) for bitmapPosCount
    bitmap.o(i.bitmapGetFirstSet) refers to bitmap.o(.constdata) for quickFindTable
    bitmap.o(i.bitmapSet) refers to assert.o(.text) for __aeabi_assert
    rt_task.o(i.getHighestReadyTask) refers to bitmap.o(i.bitmapGetFirstSet) for bitmapGetFirstSet
    rt_task.o(i.getHighestReadyTask) refers to rt_list.o(i.getFirstListNode) for getFirstListNode
    rt_task.o(i.getHighestReadyTask) refers to rt_task.o(.data) for taskPriorityBitmap
    rt_task.o(i.getHighestReadyTask) refers to rt_task.o(.bss) for taskTable
    rt_task.o(i.taskDelayedListInit) refers to rt_list.o(i.listHeadInit) for listHeadInit
    rt_task.o(i.taskDelayedListInit) refers to rt_time.o(.bss) for taskDelayedList
    rt_task.o(i.taskDeleteSelf) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskDeleteSelf) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_task.o(i.taskDeleteSelf) refers to rt_task.o(i.taskSched) for taskSched
    rt_task.o(i.taskDeleteSelf) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskDeleteSelf) refers to rt_task.o(.data) for currentTask
    rt_task.o(i.taskForceDelete) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskForceDelete) refers to rt_task.o(i.taskSched2Undelay) for taskSched2Undelay
    rt_task.o(i.taskForceDelete) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_task.o(i.taskForceDelete) refers to rt_task.o(i.taskSched) for taskSched
    rt_task.o(i.taskForceDelete) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskForceDelete) refers to rt_task.o(.data) for currentTask
    rt_task.o(i.taskGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskGetInfo) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_task.o(i.taskInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rt_task.o(i.taskInit) refers to rt_list.o(i.listNodeInit) for listNodeInit
    rt_task.o(i.taskInit) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_task.o(i.taskSched) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskSched) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskSched) refers to rt_task.o(i.getHighestReadyTask) for getHighestReadyTask
    rt_task.o(i.taskSched) refers to switch.o(i.taskSwitch) for taskSwitch
    rt_task.o(i.taskSched) refers to lock.o(.data) for schedLockCount
    rt_task.o(i.taskSched) refers to rt_task.o(.data) for currentTask
    rt_task.o(i.taskSched2Delay) refers to rt_list.o(i.listNodeInsert2Head) for listNodeInsert2Head
    rt_task.o(i.taskSched2Delay) refers to rt_task.o(.data) for currentTask
    rt_task.o(i.taskSched2Delay) refers to rt_time.o(.bss) for taskDelayedList
    rt_task.o(i.taskSched2Ready) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_task.o(i.taskSched2Ready) refers to bitmap.o(i.bitmapSet) for bitmapSet
    rt_task.o(i.taskSched2Ready) refers to rt_task.o(.bss) for taskTable
    rt_task.o(i.taskSched2Ready) refers to rt_task.o(.data) for taskPriorityBitmap
    rt_task.o(i.taskSched2Undelay) refers to rt_list.o(i.checkNodeIsInList) for checkNodeIsInList
    rt_task.o(i.taskSched2Undelay) refers to rt_list.o(i.listRemove) for listRemove
    rt_task.o(i.taskSched2Undelay) refers to rt_time.o(.bss) for taskDelayedList
    rt_task.o(i.taskSched2Unready) refers to rt_list.o(i.checkNodeIsInList) for checkNodeIsInList
    rt_task.o(i.taskSched2Unready) refers to rt_list.o(i.listRemove) for listRemove
    rt_task.o(i.taskSched2Unready) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_task.o(i.taskSched2Unready) refers to bitmap.o(i.bitmapClear) for bitmapClear
    rt_task.o(i.taskSched2Unready) refers to rt_task.o(.bss) for taskTable
    rt_task.o(i.taskSched2Unready) refers to rt_task.o(.data) for taskPriorityBitmap
    rt_task.o(i.taskSuspend) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskSuspend) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskSuspend) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_task.o(i.taskSuspend) refers to rt_task.o(i.taskSched) for taskSched
    rt_task.o(i.taskSuspend) refers to rt_task.o(.data) for currentTask
    rt_task.o(i.taskWakeUp) refers to lock.o(i.enterCritical) for enterCritical
    rt_task.o(i.taskWakeUp) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_task.o(i.taskWakeUp) refers to rt_task.o(i.taskSched) for taskSched
    rt_task.o(i.taskWakeUp) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_task.o(i.taskWakeUp) refers to rt_task.o(.data) for currentTask
    rt_list.o(i.listInsert) refers to rt_list.o(i.checkNodeIsInList) for checkNodeIsInList
    rt_list.o(i.listInsert) refers to assert.o(.text) for __aeabi_assert
    rt_list.o(i.listRemove) refers to rt_list.o(i.checkNodeIsInList) for checkNodeIsInList
    application.o(i.appInit) refers to rt_task.o(i.taskInit) for taskInit
    application.o(i.appInit) refers to application.o(.bss) for task1Env
    application.o(i.appInit) refers to application.o(i.task1Entry) for task1Entry
    application.o(i.appInit) refers to application.o(i.task2Entry) for task2Entry
    application.o(i.appInit) refers to application.o(i.task3Entry) for task3Entry
    application.o(i.appInit) refers to application.o(i.task4Entry) for task4Entry
    application.o(i.task1Entry) refers to rt_timer.o(i.timerInit) for timerInit
    application.o(i.task1Entry) refers to rt_timer.o(i.timerStart) for timerStart
    application.o(i.task1Entry) refers to rt_time.o(i.taskDelay) for taskDelay
    application.o(i.task1Entry) refers to application.o(.data) for bit
    application.o(i.task1Entry) refers to application.o(i.timerFunc) for timerFunc
    application.o(i.task1Entry) refers to application.o(.bss) for timer
    application.o(i.task2Entry) refers to rt_time.o(i.taskDelay) for taskDelay
    application.o(i.task2Entry) refers to application.o(.data) for task2Flag
    application.o(i.task3Entry) refers to rt_time.o(i.taskDelay) for taskDelay
    application.o(i.task3Entry) refers to application.o(.data) for task3Flag
    application.o(i.task4Entry) refers to rt_time.o(i.taskDelay) for taskDelay
    application.o(i.task4Entry) refers to application.o(.data) for task4Flag
    rt_cpu.o(i.setSysTick) refers to system_armcm3.o(.data) for SystemCoreClock
    rt_event.o(i.eventGetWaitNum) refers to lock.o(i.enterCritical) for enterCritical
    rt_event.o(i.eventGetWaitNum) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_event.o(i.eventGetWaitNum) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_event.o(i.eventInit) refers to rt_list.o(i.listHeadInit) for listHeadInit
    rt_event.o(i.eventInsertTaskByPriority) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_event.o(i.eventInsertTaskByPriority) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_event.o(i.eventInsertTaskByPriority) refers to rt_list.o(i.listInsert) for listInsert
    rt_event.o(i.eventRemoveAllTask) refers to lock.o(i.enterCritical) for enterCritical
    rt_event.o(i.eventRemoveAllTask) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_event.o(i.eventRemoveAllTask) refers to rt_event.o(i.eventRemoveTask) for eventRemoveTask
    rt_event.o(i.eventRemoveAllTask) refers to rt_task.o(i.taskSched2Undelay) for taskSched2Undelay
    rt_event.o(i.eventRemoveAllTask) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_event.o(i.eventRemoveAllTask) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_event.o(i.eventRemoveTask) refers to lock.o(i.enterCritical) for enterCritical
    rt_event.o(i.eventRemoveTask) refers to rt_list.o(i.listRemove) for listRemove
    rt_event.o(i.eventRemoveTask) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_event.o(i.eventWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_event.o(i.eventWait) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_event.o(i.eventWait) refers to rt_event.o(i.eventInsertTaskByPriority) for eventInsertTaskByPriority
    rt_event.o(i.eventWait) refers to rt_task.o(i.taskSched2Delay) for taskSched2Delay
    rt_event.o(i.eventWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_event.o(i.eventWakeUp) refers to lock.o(i.enterCritical) for enterCritical
    rt_event.o(i.eventWakeUp) refers to rt_list.o(i.listRemoveFirst) for listRemoveFirst
    rt_event.o(i.eventWakeUp) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_event.o(i.eventWakeUp) refers to rt_task.o(i.taskSched2Undelay) for taskSched2Undelay
    rt_event.o(i.eventWakeUp) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_event.o(i.eventWakeUpGivenTask) refers to rt_list.o(i.listRemove) for listRemove
    rt_event.o(i.eventWakeUpGivenTask) refers to rt_task.o(i.taskSched2Undelay) for taskSched2Undelay
    rt_event.o(i.eventWakeUpGivenTask) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_mailbox.o(i.mboxDestory) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxDestory) refers to rt_event.o(i.eventRemoveAllTask) for eventRemoveAllTask
    rt_mailbox.o(i.mboxDestory) refers to rt_task.o(i.taskSched) for taskSched
    rt_mailbox.o(i.mboxDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxFlush) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxFlush) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_mailbox.o(i.mboxFlush) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxGetInfo) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_mailbox.o(i.mboxGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxGetWithNoWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxGetWithNoWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxInit) refers to rt_event.o(i.eventInit) for eventInit
    rt_mailbox.o(i.mboxPost) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxPost) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_mailbox.o(i.mboxPost) refers to rt_event.o(i.eventWakeUp) for eventWakeUp
    rt_mailbox.o(i.mboxPost) refers to rt_task.o(i.taskSched) for taskSched
    rt_mailbox.o(i.mboxPost) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxPost) refers to rt_task.o(.data) for currentTask
    rt_mailbox.o(i.mboxWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_mailbox.o(i.mboxWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mailbox.o(i.mboxWait) refers to rt_event.o(i.eventWait) for eventWait
    rt_mailbox.o(i.mboxWait) refers to rt_task.o(i.taskSched) for taskSched
    rt_mailbox.o(i.mboxWait) refers to rt_task.o(.data) for currentTask
    rt_time.o(i.SysTick_Handler) refers to rt_time.o(i.taskTimeSliceHandler) for taskTimeSliceHandler
    rt_time.o(i.taskDelay) refers to lock.o(i.enterCritical) for enterCritical
    rt_time.o(i.taskDelay) refers to rt_task.o(i.taskSched2Delay) for taskSched2Delay
    rt_time.o(i.taskDelay) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_time.o(i.taskDelay) refers to rt_task.o(i.taskSched) for taskSched
    rt_time.o(i.taskDelay) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_time.o(i.taskDelay) refers to rt_task.o(.data) for currentTask
    rt_time.o(i.taskTimeSliceHandler) refers to rt_event.o(i.eventRemoveTask) for eventRemoveTask
    rt_time.o(i.taskTimeSliceHandler) refers to rt_task.o(i.taskSched2Undelay) for taskSched2Undelay
    rt_time.o(i.taskTimeSliceHandler) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_time.o(i.taskTimeSliceHandler) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_time.o(i.taskTimeSliceHandler) refers to rt_list.o(i.listRemoveFirst) for listRemoveFirst
    rt_time.o(i.taskTimeSliceHandler) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_time.o(i.taskTimeSliceHandler) refers to rt_timer.o(i.timerFuncPost) for timerFuncPost
    rt_time.o(i.taskTimeSliceHandler) refers to rt_task.o(i.taskSched) for taskSched
    rt_time.o(i.taskTimeSliceHandler) refers to rt_time.o(.bss) for taskDelayedList
    rt_time.o(i.taskTimeSliceHandler) refers to rt_task.o(.data) for currentTask
    rt_time.o(i.taskTimeSliceHandler) refers to rt_task.o(.bss) for taskTable
    semaphore.o(i.semDestory) refers to lock.o(i.enterCritical) for enterCritical
    semaphore.o(i.semDestory) refers to rt_event.o(i.eventRemoveAllTask) for eventRemoveAllTask
    semaphore.o(i.semDestory) refers to rt_task.o(i.taskSched) for taskSched
    semaphore.o(i.semDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    semaphore.o(i.semGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    semaphore.o(i.semGetInfo) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    semaphore.o(i.semGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    semaphore.o(i.semGetWithNoWait) refers to lock.o(i.enterCritical) for enterCritical
    semaphore.o(i.semGetWithNoWait) refers to lock.o(i.leaveCritical) for leaveCritical
    semaphore.o(i.semInit) refers to rt_event.o(i.eventInit) for eventInit
    semaphore.o(i.semPost) refers to lock.o(i.enterCritical) for enterCritical
    semaphore.o(i.semPost) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    semaphore.o(i.semPost) refers to rt_event.o(i.eventWakeUp) for eventWakeUp
    semaphore.o(i.semPost) refers to rt_task.o(i.taskSched) for taskSched
    semaphore.o(i.semPost) refers to lock.o(i.leaveCritical) for leaveCritical
    semaphore.o(i.semPost) refers to rt_task.o(.data) for currentTask
    semaphore.o(i.semWait) refers to lock.o(i.enterCritical) for enterCritical
    semaphore.o(i.semWait) refers to lock.o(i.leaveCritical) for leaveCritical
    semaphore.o(i.semWait) refers to rt_event.o(i.eventWait) for eventWait
    semaphore.o(i.semWait) refers to rt_task.o(i.taskSched) for taskSched
    semaphore.o(i.semWait) refers to rt_task.o(.data) for currentTask
    rt_memblock.o(i.memBlockDestory) refers to lock.o(i.enterCritical) for enterCritical
    rt_memblock.o(i.memBlockDestory) refers to rt_event.o(i.eventRemoveAllTask) for eventRemoveAllTask
    rt_memblock.o(i.memBlockDestory) refers to rt_task.o(i.taskSched) for taskSched
    rt_memblock.o(i.memBlockDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_memblock.o(i.memBlockGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_memblock.o(i.memBlockGetInfo) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_memblock.o(i.memBlockGetInfo) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_memblock.o(i.memBlockGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_memblock.o(i.memBlockGetWithNoWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_memblock.o(i.memBlockGetWithNoWait) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_memblock.o(i.memBlockGetWithNoWait) refers to rt_list.o(i.listRemoveFirst) for listRemoveFirst
    rt_memblock.o(i.memBlockGetWithNoWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_memblock.o(i.memBlockInit) refers to rt_event.o(i.eventInit) for eventInit
    rt_memblock.o(i.memBlockInit) refers to rt_list.o(i.listHeadInit) for listHeadInit
    rt_memblock.o(i.memBlockInit) refers to rt_list.o(i.listNodeInit) for listNodeInit
    rt_memblock.o(i.memBlockInit) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_memblock.o(i.memBlockPost) refers to lock.o(i.enterCritical) for enterCritical
    rt_memblock.o(i.memBlockPost) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_memblock.o(i.memBlockPost) refers to rt_event.o(i.eventWakeUp) for eventWakeUp
    rt_memblock.o(i.memBlockPost) refers to rt_task.o(i.taskSched) for taskSched
    rt_memblock.o(i.memBlockPost) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_memblock.o(i.memBlockPost) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_memblock.o(i.memBlockPost) refers to rt_task.o(.data) for currentTask
    rt_memblock.o(i.memBlockWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_memblock.o(i.memBlockWait) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_memblock.o(i.memBlockWait) refers to rt_list.o(i.listRemoveFirst) for listRemoveFirst
    rt_memblock.o(i.memBlockWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_memblock.o(i.memBlockWait) refers to rt_event.o(i.eventWait) for eventWait
    rt_memblock.o(i.memBlockWait) refers to rt_task.o(i.taskSched) for taskSched
    rt_memblock.o(i.memBlockWait) refers to rt_task.o(.data) for currentTask
    rt_eflaggroup.o(i.eFlagGroupDestory) refers to lock.o(i.enterCritical) for enterCritical
    rt_eflaggroup.o(i.eFlagGroupDestory) refers to rt_event.o(i.eventRemoveAllTask) for eventRemoveAllTask
    rt_eflaggroup.o(i.eFlagGroupDestory) refers to rt_task.o(i.taskSched) for taskSched
    rt_eflaggroup.o(i.eFlagGroupDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_eflaggroup.o(i.eFlagGroupGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_eflaggroup.o(i.eFlagGroupGetInfo) refers to rt_list.o(i.getListNodeNum) for getListNodeNum
    rt_eflaggroup.o(i.eFlagGroupGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_eflaggroup.o(i.eFlagGroupGetWithNoWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_eflaggroup.o(i.eFlagGroupGetWithNoWait) refers to rt_eflaggroup.o(i.eFlagGroupCheckExpected) for eFlagGroupCheckExpected
    rt_eflaggroup.o(i.eFlagGroupGetWithNoWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_eflaggroup.o(i.eFlagGroupInit) refers to rt_event.o(i.eventInit) for eventInit
    rt_eflaggroup.o(i.eFlagGroupPost) refers to lock.o(i.enterCritical) for enterCritical
    rt_eflaggroup.o(i.eFlagGroupPost) refers to rt_eflaggroup.o(i.eFlagGroupCheckExpected) for eFlagGroupCheckExpected
    rt_eflaggroup.o(i.eFlagGroupPost) refers to rt_event.o(i.eventWakeUpGivenTask) for eventWakeUpGivenTask
    rt_eflaggroup.o(i.eFlagGroupPost) refers to rt_task.o(i.taskSched) for taskSched
    rt_eflaggroup.o(i.eFlagGroupPost) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_eflaggroup.o(i.eFlagGroupPost) refers to rt_task.o(.data) for currentTask
    rt_eflaggroup.o(i.eFlagGroupWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_eflaggroup.o(i.eFlagGroupWait) refers to rt_eflaggroup.o(i.eFlagGroupCheckExpected) for eFlagGroupCheckExpected
    rt_eflaggroup.o(i.eFlagGroupWait) refers to rt_event.o(i.eventWait) for eventWait
    rt_eflaggroup.o(i.eFlagGroupWait) refers to rt_task.o(i.taskSched) for taskSched
    rt_eflaggroup.o(i.eFlagGroupWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_eflaggroup.o(i.eFlagGroupWait) refers to rt_task.o(.data) for currentTask
    rt_mutex.o(i.mutexDestory) refers to lock.o(i.enterCritical) for enterCritical
    rt_mutex.o(i.mutexDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mutex.o(i.mutexDestory) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_mutex.o(i.mutexDestory) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_mutex.o(i.mutexDestory) refers to rt_event.o(i.eventRemoveAllTask) for eventRemoveAllTask
    rt_mutex.o(i.mutexDestory) refers to rt_task.o(i.taskSched) for taskSched
    rt_mutex.o(i.mutexGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_mutex.o(i.mutexGetInfo) refers to rt_event.o(i.eventGetWaitNum) for eventGetWaitNum
    rt_mutex.o(i.mutexGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mutex.o(i.mutexGetInfo) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_mutex.o(i.mutexGetWithNoWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_mutex.o(i.mutexGetWithNoWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mutex.o(i.mutexGetWithNoWait) refers to rt_task.o(.data) for currentTask
    rt_mutex.o(i.mutexInit) refers to rt_event.o(i.eventInit) for eventInit
    rt_mutex.o(i.mutexPost) refers to lock.o(i.enterCritical) for enterCritical
    rt_mutex.o(i.mutexPost) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mutex.o(i.mutexPost) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_mutex.o(i.mutexPost) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_mutex.o(i.mutexPost) refers to rt_event.o(i.eventWakeUp) for eventWakeUp
    rt_mutex.o(i.mutexPost) refers to rt_task.o(i.taskSched) for taskSched
    rt_mutex.o(i.mutexPost) refers to rt_task.o(.data) for currentTask
    rt_mutex.o(i.mutexWait) refers to lock.o(i.enterCritical) for enterCritical
    rt_mutex.o(i.mutexWait) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_mutex.o(i.mutexWait) refers to rt_event.o(i.eventWait) for eventWait
    rt_mutex.o(i.mutexWait) refers to rt_task.o(i.taskSched) for taskSched
    rt_mutex.o(i.mutexWait) refers to rt_task.o(i.taskSched2Unready) for taskSched2Unready
    rt_mutex.o(i.mutexWait) refers to rt_task.o(i.taskSched2Ready) for taskSched2Ready
    rt_mutex.o(i.mutexWait) refers to rt_task.o(.data) for currentTask
    rt_timer.o(i.timerCallFuncList) refers to rt_list.o(i.listRemove) for listRemove
    rt_timer.o(i.timerDestory) refers to lock.o(i.enterCritical) for enterCritical
    rt_timer.o(i.timerDestory) refers to rt_list.o(i.listRemove) for listRemove
    rt_timer.o(i.timerDestory) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_timer.o(i.timerDestory) refers to semaphore.o(i.semWait) for semWait
    rt_timer.o(i.timerDestory) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerDestory) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerFuncInit) refers to rt_list.o(i.listHeadInit) for listHeadInit
    rt_timer.o(i.timerFuncInit) refers to semaphore.o(i.semInit) for semInit
    rt_timer.o(i.timerFuncInit) refers to rt_task.o(i.taskInit) for taskInit
    rt_timer.o(i.timerFuncInit) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerFuncInit) refers to rt_timer.o(i.timerTaskFunc) for timerTaskFunc
    rt_timer.o(i.timerFuncPost) refers to rt_timer.o(i.timerCallFuncList) for timerCallFuncList
    rt_timer.o(i.timerFuncPost) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerFuncPost) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerGetInfo) refers to lock.o(i.enterCritical) for enterCritical
    rt_timer.o(i.timerGetInfo) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_timer.o(i.timerGetInfo) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_timer.o(i.timerInit) refers to rt_list.o(i.listNodeInit) for listNodeInit
    rt_timer.o(i.timerResetSemForTimerNotify) refers to rt_timer.o(.bss) for semForTimerNotify
    rt_timer.o(i.timerResume) refers to lock.o(i.enterCritical) for enterCritical
    rt_timer.o(i.timerResume) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_timer.o(i.timerResume) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_timer.o(i.timerResume) refers to semaphore.o(i.semWait) for semWait
    rt_timer.o(i.timerResume) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerResume) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerStart) refers to lock.o(i.enterCritical) for enterCritical
    rt_timer.o(i.timerStart) refers to rt_list.o(i.listNodeInsert2Tail) for listNodeInsert2Tail
    rt_timer.o(i.timerStart) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_timer.o(i.timerStart) refers to semaphore.o(i.semWait) for semWait
    rt_timer.o(i.timerStart) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerStart) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerStop) refers to lock.o(i.enterCritical) for enterCritical
    rt_timer.o(i.timerStop) refers to rt_list.o(i.listRemove) for listRemove
    rt_timer.o(i.timerStop) refers to lock.o(i.leaveCritical) for leaveCritical
    rt_timer.o(i.timerStop) refers to semaphore.o(i.semWait) for semWait
    rt_timer.o(i.timerStop) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerStop) refers to rt_timer.o(.bss) for timerStrictList
    rt_timer.o(i.timerTaskFunc) refers to semaphore.o(i.semWait) for semWait
    rt_timer.o(i.timerTaskFunc) refers to rt_timer.o(i.timerCallFuncList) for timerCallFuncList
    rt_timer.o(i.timerTaskFunc) refers to semaphore.o(i.semPost) for semPost
    rt_timer.o(i.timerTaskFunc) refers to rt_timer.o(.bss) for semForTimerNotify
    startup_armcm3.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm3.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm3.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm3.o(RESET) refers to startup_armcm3.o(STACK) for __initial_sp
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text) for Reset_Handler
    startup_armcm3.o(RESET) refers to switch.o(.emb_text) for PendSV_Handler
    startup_armcm3.o(RESET) refers to rt_time.o(i.SysTick_Handler) for SysTick_Handler
    startup_armcm3.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_armcm3.o(.text) refers to system_armcm3.o(i.SystemInit) for SystemInit
    startup_armcm3.o(.text) refers to __main.o(!!!main) for __main
    startup_armcm3.o(.text) refers to startup_armcm3.o(HEAP) for Heap_Mem
    startup_armcm3.o(.text) refers to startup_armcm3.o(STACK) for Stack_Mem
    system_armcm3.o(i.SystemCoreClockUpdate) refers to system_armcm3.o(.data) for SystemCoreClock
    system_armcm3.o(i.SystemInit) refers to system_armcm3.o(.data) for SystemCoreClock
    assert.o(.text) refers to assert_puts.o(.text) for __assert_puts
    assert.o(.text) refers to abort.o(.text) for abort
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    assert_puts.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_armcm3.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise


==============================================================================

Removing Unused input sections from the image.

    Removing switch.o(.rev16_text), (4 bytes).
    Removing switch.o(.revsh_text), (4 bytes).
    Removing switch.o(.rrx_text), (6 bytes).
    Removing switch.o(i.runFirstTask), (28 bytes).
    Removing lock.o(.rev16_text), (4 bytes).
    Removing lock.o(.revsh_text), (4 bytes).
    Removing lock.o(.rrx_text), (6 bytes).
    Removing lock.o(i.lockSched), (40 bytes).
    Removing lock.o(i.unlockSched), (48 bytes).
    Removing rt_task.o(.rev16_text), (4 bytes).
    Removing rt_task.o(.revsh_text), (4 bytes).
    Removing rt_task.o(.rrx_text), (6 bytes).
    Removing rt_task.o(i.taskDeleteSelf), (56 bytes).
    Removing rt_task.o(i.taskForceDelete), (80 bytes).
    Removing rt_task.o(i.taskGetInfo), (96 bytes).
    Removing rt_task.o(i.taskIsRequestedDelete), (8 bytes).
    Removing rt_task.o(i.taskRequestDelete), (8 bytes).
    Removing rt_task.o(i.taskSetCleanCallFunc), (6 bytes).
    Removing rt_task.o(i.taskSuspend), (76 bytes).
    Removing rt_task.o(i.taskWakeUp), (72 bytes).
    Removing rt_list.o(i.getLastListNode), (14 bytes).
    Removing rt_list.o(i.getNextListNode), (16 bytes).
    Removing rt_list.o(i.getPrevListNode), (16 bytes).
    Removing rt_list.o(i.listClearALL), (34 bytes).
    Removing rt_cpu.o(.rev16_text), (4 bytes).
    Removing rt_cpu.o(.revsh_text), (4 bytes).
    Removing rt_cpu.o(.rrx_text), (6 bytes).
    Removing rt_event.o(i.eventRemoveAllTask), (86 bytes).
    Removing rt_event.o(i.eventWakeUpGivenTask), (64 bytes).
    Removing rt_mailbox.o(i.mboxDestory), (46 bytes).
    Removing rt_mailbox.o(i.mboxFlush), (34 bytes).
    Removing rt_mailbox.o(i.mboxGetInfo), (44 bytes).
    Removing rt_mailbox.o(i.mboxGetWithNoWait), (68 bytes).
    Removing rt_mailbox.o(i.mboxInit), (30 bytes).
    Removing rt_mailbox.o(i.mboxPost), (164 bytes).
    Removing rt_mailbox.o(i.mboxWait), (108 bytes).
    Removing semaphore.o(i.semDestory), (42 bytes).
    Removing semaphore.o(i.semGetInfo), (44 bytes).
    Removing semaphore.o(i.semGetWithNoWait), (40 bytes).
    Removing rt_memblock.o(i.memBlockDestory), (38 bytes).
    Removing rt_memblock.o(i.memBlockGetInfo), (54 bytes).
    Removing rt_memblock.o(i.memBlockGetWithNoWait), (52 bytes).
    Removing rt_memblock.o(i.memBlockInit), (80 bytes).
    Removing rt_memblock.o(i.memBlockPost), (84 bytes).
    Removing rt_memblock.o(i.memBlockWait), (92 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupCheckExpected), (86 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupDestory), (38 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupGetInfo), (42 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupGetWithNoWait), (68 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupInit), (18 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupPost), (132 bytes).
    Removing rt_eflaggroup.o(i.eFlagGroupWait), (120 bytes).
    Removing rt_mutex.o(i.mutexDestory), (102 bytes).
    Removing rt_mutex.o(i.mutexGetInfo), (72 bytes).
    Removing rt_mutex.o(i.mutexGetWithNoWait), (84 bytes).
    Removing rt_mutex.o(i.mutexInit), (24 bytes).
    Removing rt_mutex.o(i.mutexPost), (152 bytes).
    Removing rt_mutex.o(i.mutexWait), (228 bytes).
    Removing rt_timer.o(i.timerDestory), (100 bytes).
    Removing rt_timer.o(i.timerGetInfo), (58 bytes).
    Removing rt_timer.o(i.timerResetSemForTimerNotify), (12 bytes).
    Removing rt_timer.o(i.timerResume), (92 bytes).
    Removing rt_timer.o(i.timerStop), (100 bytes).
    Removing rt_hooks.o(.rev16_text), (4 bytes).
    Removing rt_hooks.o(.revsh_text), (4 bytes).
    Removing rt_hooks.o(.rrx_text), (6 bytes).
    Removing system_armcm3.o(.rev16_text), (4 bytes).
    Removing system_armcm3.o(.revsh_text), (4 bytes).
    Removing system_armcm3.o(.rrx_text), (6 bytes).
    Removing system_armcm3.o(i.SystemCoreClockUpdate), (16 bytes).

70 unused section(s) (total 3396 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_armcm3.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_puts.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE\Device\ARMCM3\startup_ARMCM3.s       0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    RTE\Device\ARMCM3\system_ARMCM3.c        0x00000000   Number         0  system_armcm3.o ABSOLUTE
    RTE\\Device\\ARMCM3\\system_ARMCM3.c     0x00000000   Number         0  system_armcm3.o ABSOLUTE
    SRC\\lock.c                              0x00000000   Number         0  lock.o ABSOLUTE
    SRC\\rt_cpu.c                            0x00000000   Number         0  rt_cpu.o ABSOLUTE
    SRC\\rt_hooks.c                          0x00000000   Number         0  rt_hooks.o ABSOLUTE
    SRC\\rt_task.c                           0x00000000   Number         0  rt_task.o ABSOLUTE
    SRC\\switch.c                            0x00000000   Number         0  switch.o ABSOLUTE
    SRC\application.c                        0x00000000   Number         0  application.o ABSOLUTE
    SRC\bitmap.c                             0x00000000   Number         0  bitmap.o ABSOLUTE
    SRC\lock.c                               0x00000000   Number         0  lock.o ABSOLUTE
    SRC\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    SRC\rt_cpu.c                             0x00000000   Number         0  rt_cpu.o ABSOLUTE
    SRC\rt_eflaggroup.c                      0x00000000   Number         0  rt_eflaggroup.o ABSOLUTE
    SRC\rt_event.c                           0x00000000   Number         0  rt_event.o ABSOLUTE
    SRC\rt_hooks.c                           0x00000000   Number         0  rt_hooks.o ABSOLUTE
    SRC\rt_idletask.c                        0x00000000   Number         0  rt_idletask.o ABSOLUTE
    SRC\rt_list.c                            0x00000000   Number         0  rt_list.o ABSOLUTE
    SRC\rt_mailbox.c                         0x00000000   Number         0  rt_mailbox.o ABSOLUTE
    SRC\rt_memblock.c                        0x00000000   Number         0  rt_memblock.o ABSOLUTE
    SRC\rt_mutex.c                           0x00000000   Number         0  rt_mutex.o ABSOLUTE
    SRC\rt_task.c                            0x00000000   Number         0  rt_task.o ABSOLUTE
    SRC\rt_time.c                            0x00000000   Number         0  rt_time.o ABSOLUTE
    SRC\rt_timer.c                           0x00000000   Number         0  rt_timer.o ABSOLUTE
    SRC\semaphore.c                          0x00000000   Number         0  semaphore.o ABSOLUTE
    SRC\switch.c                             0x00000000   Number         0  switch.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000000fc   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000118   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000134   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000136   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000136   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000138   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000013a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000013a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000013c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000013c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000013c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000142   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000142   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000146   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000146   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000014e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000150   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000150   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000154   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0000015c   Section       48  switch.o(.emb_text)
    .text                                    0x0000018c   Section       64  startup_armcm3.o(.text)
    .text                                    0x000001cc   Section        0  assert.o(.text)
    .text                                    0x0000024c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0000029a   Section        0  heapauxi.o(.text)
    .text                                    0x000002a0   Section        0  abort.o(.text)
    .text                                    0x000002b6   Section        0  assert_puts.o(.text)
    .text                                    0x000002ca   Section        0  sys_wrch.o(.text)
    .text                                    0x000002d8   Section        0  sys_exit.o(.text)
    .text                                    0x000002e4   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x000002f2   Section        2  use_no_semi.o(.text)
    .text                                    0x000002f4   Section        0  indicate_semi.o(.text)
    .text                                    0x000002f4   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000033e   Section        0  exit.o(.text)
    .text                                    0x00000350   Section        0  defsig_exit.o(.text)
    .text                                    0x0000035c   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x0000038c   Section        8  libspace.o(.text)
    .text                                    0x00000394   Section        0  defsig_general.o(.text)
    i.SysTick_Handler                        0x000003c6   Section        0  rt_time.o(i.SysTick_Handler)
    i.SystemInit                             0x000003d0   Section        0  system_armcm3.o(i.SystemInit)
    i.appInit                                0x000003e0   Section        0  application.o(i.appInit)
    i.bitmapClear                            0x00000474   Section        0  bitmap.o(i.bitmapClear)
    i.bitmapGetFirstSet                      0x000004b4   Section        0  bitmap.o(i.bitmapGetFirstSet)
    i.bitmapInit                             0x00000510   Section        0  bitmap.o(i.bitmapInit)
    i.bitmapPosCount                         0x00000516   Section        0  bitmap.o(i.bitmapPosCount)
    i.bitmapSet                              0x0000051c   Section        0  bitmap.o(i.bitmapSet)
    i.checkNodeIsInList                      0x0000055c   Section        0  rt_list.o(i.checkNodeIsInList)
    i.enterCritical                          0x00000576   Section        0  lock.o(i.enterCritical)
    i.eventGetWaitNum                        0x00000582   Section        0  rt_event.o(i.eventGetWaitNum)
    i.eventInit                              0x000005a0   Section        0  rt_event.o(i.eventInit)
    i.eventInsertTaskByPriority              0x000005b0   Section        0  rt_event.o(i.eventInsertTaskByPriority)
    eventInsertTaskByPriority                0x000005b1   Thumb Code    76  rt_event.o(i.eventInsertTaskByPriority)
    i.eventRemoveTask                        0x000005fc   Section        0  rt_event.o(i.eventRemoveTask)
    i.eventWait                              0x00000632   Section        0  rt_event.o(i.eventWait)
    i.eventWakeUp                            0x0000067c   Section        0  rt_event.o(i.eventWakeUp)
    i.getFirstListNode                       0x000006de   Section        0  rt_list.o(i.getFirstListNode)
    i.getHighestReadyTask                    0x000006ec   Section        0  rt_task.o(i.getHighestReadyTask)
    i.getListNodeNum                         0x00000714   Section        0  rt_list.o(i.getListNodeNum)
    i.idleTaskEntry                          0x0000071a   Section        0  rt_idletask.o(i.idleTaskEntry)
    i.leaveCritical                          0x0000071e   Section        0  lock.o(i.leaveCritical)
    i.listHeadInit                           0x00000728   Section        0  rt_list.o(i.listHeadInit)
    i.listInsert                             0x00000734   Section        0  rt_list.o(i.listInsert)
    i.listNodeInit                           0x0000078c   Section        0  rt_list.o(i.listNodeInit)
    i.listNodeInsert2Head                    0x00000794   Section        0  rt_list.o(i.listNodeInsert2Head)
    i.listNodeInsert2Tail                    0x000007ac   Section        0  rt_list.o(i.listNodeInsert2Tail)
    i.listRemove                             0x000007c4   Section        0  rt_list.o(i.listRemove)
    i.listRemoveFirst                        0x000007f0   Section        0  rt_list.o(i.listRemoveFirst)
    i.main                                   0x00000818   Section        0  main.o(i.main)
    i.rtosInit                               0x00000838   Section        0  main.o(i.rtosInit)
    i.runFirstTask2                          0x000008a0   Section        0  switch.o(i.runFirstTask2)
    i.schedLockInit                          0x000008dc   Section        0  lock.o(i.schedLockInit)
    i.semInit                                0x000008e8   Section        0  semaphore.o(i.semInit)
    i.semPost                                0x00000910   Section        0  semaphore.o(i.semPost)
    i.semWait                                0x00000964   Section        0  semaphore.o(i.semWait)
    i.setSysTick                             0x000009ac   Section        0  rt_cpu.o(i.setSysTick)
    i.task1Entry                             0x00000a04   Section        0  application.o(i.task1Entry)
    i.task2Entry                             0x00000a50   Section        0  application.o(i.task2Entry)
    i.task3Entry                             0x00000a70   Section        0  application.o(i.task3Entry)
    i.task4Entry                             0x00000a90   Section        0  application.o(i.task4Entry)
    i.taskDelay                              0x00000ab0   Section        0  rt_time.o(i.taskDelay)
    i.taskDelayedListInit                    0x00000ae4   Section        0  rt_task.o(i.taskDelayedListInit)
    i.taskInit                               0x00000af4   Section        0  rt_task.o(i.taskInit)
    i.taskSched                              0x00000bd8   Section        0  rt_task.o(i.taskSched)
    i.taskSched2Delay                        0x00000c1c   Section        0  rt_task.o(i.taskSched2Delay)
    i.taskSched2Ready                        0x00000c54   Section        0  rt_task.o(i.taskSched2Ready)
    i.taskSched2Undelay                      0x00000c84   Section        0  rt_task.o(i.taskSched2Undelay)
    i.taskSched2Unready                      0x00000cb4   Section        0  rt_task.o(i.taskSched2Unready)
    i.taskSwitch                             0x00000d14   Section        0  switch.o(i.taskSwitch)
    i.taskTimeSliceHandler                   0x00000d24   Section        0  rt_time.o(i.taskTimeSliceHandler)
    i.timerCallFuncList                      0x00000dd0   Section        0  rt_timer.o(i.timerCallFuncList)
    timerCallFuncList                        0x00000dd1   Thumb Code    72  rt_timer.o(i.timerCallFuncList)
    i.timerFunc                              0x00000e18   Section        0  application.o(i.timerFunc)
    i.timerFuncInit                          0x00000e24   Section        0  rt_timer.o(i.timerFuncInit)
    i.timerFuncPost                          0x00000e7c   Section        0  rt_timer.o(i.timerFuncPost)
    i.timerInit                              0x00000e94   Section        0  rt_timer.o(i.timerInit)
    i.timerStart                             0x00000ecc   Section        0  rt_timer.o(i.timerStart)
    i.timerTaskFunc                          0x00000f44   Section        0  rt_timer.o(i.timerTaskFunc)
    timerTaskFunc                            0x00000f45   Thumb Code    32  rt_timer.o(i.timerTaskFunc)
    .constdata                               0x00000f70   Section      256  bitmap.o(.constdata)
    quickFindTable                           0x00000f70   Data         256  bitmap.o(.constdata)
    .data                                    0x20000000   Section        1  lock.o(.data)
    .data                                    0x20000004   Section       12  rt_task.o(.data)
    .data                                    0x20000010   Section       20  application.o(.data)
    .data                                    0x20000024   Section        4  rt_idletask.o(.data)
    .data                                    0x20000028   Section        4  system_armcm3.o(.data)
    .bss                                     0x2000002c   Section      384  rt_task.o(.bss)
    .bss                                     0x200001ac   Section    16740  application.o(.bss)
    .bss                                     0x20004310   Section       12  rt_time.o(.bss)
    .bss                                     0x2000431c   Section     4248  rt_timer.o(.bss)
    timerStrictList                          0x2000431c   Data          12  rt_timer.o(.bss)
    timerLooseList                           0x20004328   Data          12  rt_timer.o(.bss)
    semForTimerProtect                       0x20004334   Data          24  rt_timer.o(.bss)
    semForTimerNotify                        0x2000434c   Data          24  rt_timer.o(.bss)
    timerTask                                0x20004364   Data          80  rt_timer.o(.bss)
    timerTaskStack                           0x200043b4   Data        4096  rt_timer.o(.bss)
    .bss                                     0x200053b4   Section     4176  rt_idletask.o(.bss)
    .bss                                     0x20006404   Section       96  libspace.o(.bss)
    HEAP                                     0x20006468   Section     3072  startup_armcm3.o(HEAP)
    Heap_Mem                                 0x20006468   Data        3072  startup_armcm3.o(HEAP)
    STACK                                    0x20007068   Section     1024  startup_armcm3.o(STACK)
    Stack_Mem                                0x20007068   Data        1024  startup_armcm3.o(STACK)
    __initial_sp                             0x20007468   Data           0  startup_armcm3.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_armcm3.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_armcm3.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_armcm3.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d7   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000000fd   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000119   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000135   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000137   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000139   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000013b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000013d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000013d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000013d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000143   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000014f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000151   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000151   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000155   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    PendSV_Handler                           0x0000015d   Thumb Code    40  switch.o(.emb_text)
    Reset_Handler                            0x0000018d   Thumb Code     8  startup_armcm3.o(.text)
    NMI_Handler                              0x00000195   Thumb Code     2  startup_armcm3.o(.text)
    HardFault_Handler                        0x00000197   Thumb Code     2  startup_armcm3.o(.text)
    MemManage_Handler                        0x00000199   Thumb Code     2  startup_armcm3.o(.text)
    BusFault_Handler                         0x0000019b   Thumb Code     2  startup_armcm3.o(.text)
    UsageFault_Handler                       0x0000019d   Thumb Code     2  startup_armcm3.o(.text)
    SVC_Handler                              0x0000019f   Thumb Code     2  startup_armcm3.o(.text)
    DebugMon_Handler                         0x000001a1   Thumb Code     2  startup_armcm3.o(.text)
    AACI_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    CAN_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    CHLCD_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    CLCD_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    CPU_CLCD_IRQHandler                      0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    ENET_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    FLEXRAY_IRQHandler                       0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    I2C_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    LIN_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    MCIA_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    MCIB_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    RTC_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    SPI_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    TIM0_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    TIM2_IRQHandler                          0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    UART0_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    UART1_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    UART2_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    UART3_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    UART4_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    USBDC_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    USBHC_IRQHandler                         0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    WDT_IRQHandler                           0x000001a7   Thumb Code     0  startup_armcm3.o(.text)
    __user_initial_stackheap                 0x000001a9   Thumb Code    10  startup_armcm3.o(.text)
    __aeabi_assert                           0x000001cd   Thumb Code    86  assert.o(.text)
    __assert                                 0x000001cd   Thumb Code     0  assert.o(.text)
    __aeabi_memclr4                          0x0000024d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000024d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000024d   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x00000251   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0000029b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000029d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000029f   Thumb Code     2  heapauxi.o(.text)
    abort                                    0x000002a1   Thumb Code    22  abort.o(.text)
    __assert_puts                            0x000002b7   Thumb Code    20  assert_puts.o(.text)
    _ttywrch                                 0x000002cb   Thumb Code    14  sys_wrch.o(.text)
    _sys_exit                                0x000002d9   Thumb Code     8  sys_exit.o(.text)
    __rt_SIGABRT                             0x000002e5   Thumb Code    14  defsig_abrt_outer.o(.text)
    __I$use$semihosting                      0x000002f3   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000002f3   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000002f5   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x000002f5   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000033f   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x00000351   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x0000035d   Thumb Code    14  defsig_abrt_inner.o(.text)
    __user_libspace                          0x0000038d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0000038d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0000038d   Thumb Code     0  libspace.o(.text)
    __default_signal_display                 0x00000395   Thumb Code    50  defsig_general.o(.text)
    SysTick_Handler                          0x000003c7   Thumb Code     8  rt_time.o(i.SysTick_Handler)
    SystemInit                               0x000003d1   Thumb Code     8  system_armcm3.o(i.SystemInit)
    appInit                                  0x000003e1   Thumb Code   100  application.o(i.appInit)
    bitmapClear                              0x00000475   Thumb Code    34  bitmap.o(i.bitmapClear)
    bitmapGetFirstSet                        0x000004b5   Thumb Code    86  bitmap.o(i.bitmapGetFirstSet)
    bitmapInit                               0x00000511   Thumb Code     6  bitmap.o(i.bitmapInit)
    bitmapPosCount                           0x00000517   Thumb Code     4  bitmap.o(i.bitmapPosCount)
    bitmapSet                                0x0000051d   Thumb Code    34  bitmap.o(i.bitmapSet)
    checkNodeIsInList                        0x0000055d   Thumb Code    26  rt_list.o(i.checkNodeIsInList)
    enterCritical                            0x00000577   Thumb Code    12  lock.o(i.enterCritical)
    eventGetWaitNum                          0x00000583   Thumb Code    30  rt_event.o(i.eventGetWaitNum)
    eventInit                                0x000005a1   Thumb Code    16  rt_event.o(i.eventInit)
    eventRemoveTask                          0x000005fd   Thumb Code    54  rt_event.o(i.eventRemoveTask)
    eventWait                                0x00000633   Thumb Code    74  rt_event.o(i.eventWait)
    eventWakeUp                              0x0000067d   Thumb Code    98  rt_event.o(i.eventWakeUp)
    getFirstListNode                         0x000006df   Thumb Code    14  rt_list.o(i.getFirstListNode)
    getHighestReadyTask                      0x000006ed   Thumb Code    32  rt_task.o(i.getHighestReadyTask)
    getListNodeNum                           0x00000715   Thumb Code     6  rt_list.o(i.getListNodeNum)
    idleTaskEntry                            0x0000071b   Thumb Code     4  rt_idletask.o(i.idleTaskEntry)
    leaveCritical                            0x0000071f   Thumb Code    10  lock.o(i.leaveCritical)
    listHeadInit                             0x00000729   Thumb Code    10  rt_list.o(i.listHeadInit)
    listInsert                               0x00000735   Thumb Code    58  rt_list.o(i.listInsert)
    listNodeInit                             0x0000078d   Thumb Code     8  rt_list.o(i.listNodeInit)
    listNodeInsert2Head                      0x00000795   Thumb Code    24  rt_list.o(i.listNodeInsert2Head)
    listNodeInsert2Tail                      0x000007ad   Thumb Code    24  rt_list.o(i.listNodeInsert2Tail)
    listRemove                               0x000007c5   Thumb Code    44  rt_list.o(i.listRemove)
    listRemoveFirst                          0x000007f1   Thumb Code    38  rt_list.o(i.listRemoveFirst)
    main                                     0x00000819   Thumb Code    28  main.o(i.main)
    rtosInit                                 0x00000839   Thumb Code    78  main.o(i.rtosInit)
    runFirstTask2                            0x000008a1   Thumb Code    48  switch.o(i.runFirstTask2)
    schedLockInit                            0x000008dd   Thumb Code     8  lock.o(i.schedLockInit)
    semInit                                  0x000008e9   Thumb Code    38  semaphore.o(i.semInit)
    semPost                                  0x00000911   Thumb Code    78  semaphore.o(i.semPost)
    semWait                                  0x00000965   Thumb Code    68  semaphore.o(i.semWait)
    setSysTick                               0x000009ad   Thumb Code    74  rt_cpu.o(i.setSysTick)
    task1Entry                               0x00000a05   Thumb Code    60  application.o(i.task1Entry)
    task2Entry                               0x00000a51   Thumb Code    28  application.o(i.task2Entry)
    task3Entry                               0x00000a71   Thumb Code    28  application.o(i.task3Entry)
    task4Entry                               0x00000a91   Thumb Code    28  application.o(i.task4Entry)
    taskDelay                                0x00000ab1   Thumb Code    46  rt_time.o(i.taskDelay)
    taskDelayedListInit                      0x00000ae5   Thumb Code    10  rt_task.o(i.taskDelayedListInit)
    taskInit                                 0x00000af5   Thumb Code   226  rt_task.o(i.taskInit)
    taskSched                                0x00000bd9   Thumb Code    56  rt_task.o(i.taskSched)
    taskSched2Delay                          0x00000c1d   Thumb Code    46  rt_task.o(i.taskSched2Delay)
    taskSched2Ready                          0x00000c55   Thumb Code    38  rt_task.o(i.taskSched2Ready)
    taskSched2Undelay                        0x00000c85   Thumb Code    44  rt_task.o(i.taskSched2Undelay)
    taskSched2Unready                        0x00000cb5   Thumb Code    86  rt_task.o(i.taskSched2Unready)
    taskSwitch                               0x00000d15   Thumb Code    10  switch.o(i.taskSwitch)
    taskTimeSliceHandler                     0x00000d25   Thumb Code   158  rt_time.o(i.taskTimeSliceHandler)
    timerFunc                                0x00000e19   Thumb Code    10  application.o(i.timerFunc)
    timerFuncInit                            0x00000e25   Thumb Code    58  rt_timer.o(i.timerFuncInit)
    timerFuncPost                            0x00000e7d   Thumb Code    16  rt_timer.o(i.timerFuncPost)
    timerInit                                0x00000e95   Thumb Code    56  rt_timer.o(i.timerInit)
    timerStart                               0x00000ecd   Thumb Code   108  rt_timer.o(i.timerStart)
    Region$$Table$$Base                      0x00001070   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001090   Number         0  anon$$obj.o(Region$$Table)
    schedLockCount                           0x20000000   Data           1  lock.o(.data)
    taskPriorityBitmap                       0x20000004   Data           4  rt_task.o(.data)
    currentTask                              0x20000008   Data           4  rt_task.o(.data)
    nextTask                                 0x2000000c   Data           4  rt_task.o(.data)
    bit                                      0x20000010   Data           4  application.o(.data)
    task1Flag                                0x20000014   Data           4  application.o(.data)
    task2Flag                                0x20000018   Data           4  application.o(.data)
    task3Flag                                0x2000001c   Data           4  application.o(.data)
    task4Flag                                0x20000020   Data           4  application.o(.data)
    idleTask                                 0x20000024   Data           4  rt_idletask.o(.data)
    SystemCoreClock                          0x20000028   Data           4  system_armcm3.o(.data)
    taskTable                                0x2000002c   Data         384  rt_task.o(.bss)
    task1Env                                 0x200001ac   Data        4096  application.o(.bss)
    task2Env                                 0x200011ac   Data        4096  application.o(.bss)
    task3Env                                 0x200021ac   Data        4096  application.o(.bss)
    task4Env                                 0x200031ac   Data        4096  application.o(.bss)
    ttask1                                   0x200041ac   Data          80  application.o(.bss)
    ttask2                                   0x200041fc   Data          80  application.o(.bss)
    ttask3                                   0x2000424c   Data          80  application.o(.bss)
    ttask4                                   0x2000429c   Data          80  application.o(.bss)
    timer                                    0x200042ec   Data          36  application.o(.bss)
    taskDelayedList                          0x20004310   Data          12  rt_time.o(.bss)
    _idleTask                                0x200053b4   Data          80  rt_idletask.o(.bss)
    idleTaskEnv                              0x20005404   Data        4096  rt_idletask.o(.bss)
    __libspace_start                         0x20006404   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20006464   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000018d

  Load Region LR_1 (Base: 0x00000000, Size: 0x000010bc, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Base: 0x00000000, Size: 0x00001090, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO          941    RESET               startup_armcm3.o
    0x000000c0   0x00000008   Code   RO          992  * !!!main             c_w.l(__main.o)
    0x000000c8   0x00000034   Code   RO         1157    !!!scatter          c_w.l(__scatter.o)
    0x000000fc   0x0000001a   Code   RO         1159    !!handler_copy      c_w.l(__scatter_copy.o)
    0x00000116   0x00000002   PAD
    0x00000118   0x0000001c   Code   RO         1161    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000134   0x00000002   Code   RO         1040    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000136   0x00000000   Code   RO         1051    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1053    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1056    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1058    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1060    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1063    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1065    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1067    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1069    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1071    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1073    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1075    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1077    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1079    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1081    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1083    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1087    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1089    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1091    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000136   0x00000000   Code   RO         1093    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000136   0x00000002   Code   RO         1094    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000138   0x00000002   Code   RO         1130    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000013a   0x00000000   Code   RO         1140    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000013a   0x00000000   Code   RO         1142    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000013a   0x00000000   Code   RO         1145    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000013a   0x00000000   Code   RO         1148    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000013a   0x00000000   Code   RO         1150    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000013a   0x00000000   Code   RO         1153    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000013a   0x00000002   Code   RO         1154    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000013c   0x00000000   Code   RO          994    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000013c   0x00000000   Code   RO         1004    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000013c   0x00000006   Code   RO         1016    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000142   0x00000000   Code   RO         1006    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000142   0x00000004   Code   RO         1007    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000146   0x00000000   Code   RO         1009    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000146   0x00000008   Code   RO         1010    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000014e   0x00000002   Code   RO         1044    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000150   0x00000000   Code   RO         1096    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000150   0x00000004   Code   RO         1097    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000154   0x00000006   Code   RO         1098    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000015a   0x00000002   PAD
    0x0000015c   0x00000030   Code   RO           73    .emb_text           switch.o
    0x0000018c   0x00000040   Code   RO          942  * .text               startup_armcm3.o
    0x000001cc   0x00000080   Code   RO          984    .text               c_w.l(assert.o)
    0x0000024c   0x0000004e   Code   RO          988    .text               c_w.l(rt_memclr_w.o)
    0x0000029a   0x00000006   Code   RO          990    .text               c_w.l(heapauxi.o)
    0x000002a0   0x00000016   Code   RO          995    .text               c_w.l(abort.o)
    0x000002b6   0x00000014   Code   RO          997    .text               c_w.l(assert_puts.o)
    0x000002ca   0x0000000e   Code   RO          999    .text               c_w.l(sys_wrch.o)
    0x000002d8   0x0000000c   Code   RO         1001    .text               c_w.l(sys_exit.o)
    0x000002e4   0x0000000e   Code   RO         1018    .text               c_w.l(defsig_abrt_outer.o)
    0x000002f2   0x00000002   Code   RO         1022    .text               c_w.l(use_no_semi.o)
    0x000002f4   0x00000000   Code   RO         1024    .text               c_w.l(indicate_semi.o)
    0x000002f4   0x0000004a   Code   RO         1025    .text               c_w.l(sys_stackheap_outer.o)
    0x0000033e   0x00000012   Code   RO         1029    .text               c_w.l(exit.o)
    0x00000350   0x0000000a   Code   RO         1031    .text               c_w.l(defsig_exit.o)
    0x0000035a   0x00000002   PAD
    0x0000035c   0x00000030   Code   RO         1033    .text               c_w.l(defsig_abrt_inner.o)
    0x0000038c   0x00000008   Code   RO         1041    .text               c_w.l(libspace.o)
    0x00000394   0x00000032   Code   RO         1048    .text               c_w.l(defsig_general.o)
    0x000003c6   0x00000008   Code   RO          621    i.SysTick_Handler   rt_time.o
    0x000003ce   0x00000002   PAD
    0x000003d0   0x00000010   Code   RO          950    i.SystemInit        system_armcm3.o
    0x000003e0   0x00000094   Code   RO          446    i.appInit           application.o
    0x00000474   0x00000040   Code   RO          185    i.bitmapClear       bitmap.o
    0x000004b4   0x0000005c   Code   RO          186    i.bitmapGetFirstSet  bitmap.o
    0x00000510   0x00000006   Code   RO          187    i.bitmapInit        bitmap.o
    0x00000516   0x00000004   Code   RO          188    i.bitmapPosCount    bitmap.o
    0x0000051a   0x00000002   PAD
    0x0000051c   0x00000040   Code   RO          189    i.bitmapSet         bitmap.o
    0x0000055c   0x0000001a   Code   RO          356    i.checkNodeIsInList  rt_list.o
    0x00000576   0x0000000c   Code   RO          134    i.enterCritical     lock.o
    0x00000582   0x0000001e   Code   RO          520    i.eventGetWaitNum   rt_event.o
    0x000005a0   0x00000010   Code   RO          521    i.eventInit         rt_event.o
    0x000005b0   0x0000004c   Code   RO          522    i.eventInsertTaskByPriority  rt_event.o
    0x000005fc   0x00000036   Code   RO          524    i.eventRemoveTask   rt_event.o
    0x00000632   0x0000004a   Code   RO          525    i.eventWait         rt_event.o
    0x0000067c   0x00000062   Code   RO          526    i.eventWakeUp       rt_event.o
    0x000006de   0x0000000e   Code   RO          357    i.getFirstListNode  rt_list.o
    0x000006ec   0x00000028   Code   RO          228    i.getHighestReadyTask  rt_task.o
    0x00000714   0x00000006   Code   RO          359    i.getListNodeNum    rt_list.o
    0x0000071a   0x00000004   Code   RO          901    i.idleTaskEntry     rt_idletask.o
    0x0000071e   0x0000000a   Code   RO          135    i.leaveCritical     lock.o
    0x00000728   0x0000000a   Code   RO          363    i.listHeadInit      rt_list.o
    0x00000732   0x00000002   PAD
    0x00000734   0x00000058   Code   RO          364    i.listInsert        rt_list.o
    0x0000078c   0x00000008   Code   RO          365    i.listNodeInit      rt_list.o
    0x00000794   0x00000018   Code   RO          366    i.listNodeInsert2Head  rt_list.o
    0x000007ac   0x00000018   Code   RO          367    i.listNodeInsert2Tail  rt_list.o
    0x000007c4   0x0000002c   Code   RO          368    i.listRemove        rt_list.o
    0x000007f0   0x00000026   Code   RO          369    i.listRemoveFirst   rt_list.o
    0x00000816   0x00000002   PAD
    0x00000818   0x00000020   Code   RO            1    i.main              main.o
    0x00000838   0x00000068   Code   RO            2    i.rtosInit          main.o
    0x000008a0   0x0000003c   Code   RO           75    i.runFirstTask2     switch.o
    0x000008dc   0x0000000c   Code   RO          137    i.schedLockInit     lock.o
    0x000008e8   0x00000026   Code   RO          659    i.semInit           semaphore.o
    0x0000090e   0x00000002   PAD
    0x00000910   0x00000054   Code   RO          660    i.semPost           semaphore.o
    0x00000964   0x00000048   Code   RO          661    i.semWait           semaphore.o
    0x000009ac   0x00000058   Code   RO          495    i.setSysTick        rt_cpu.o
    0x00000a04   0x0000004c   Code   RO          447    i.task1Entry        application.o
    0x00000a50   0x00000020   Code   RO          448    i.task2Entry        application.o
    0x00000a70   0x00000020   Code   RO          449    i.task3Entry        application.o
    0x00000a90   0x00000020   Code   RO          450    i.task4Entry        application.o
    0x00000ab0   0x00000034   Code   RO          622    i.taskDelay         rt_time.o
    0x00000ae4   0x00000010   Code   RO          229    i.taskDelayedListInit  rt_task.o
    0x00000af4   0x000000e2   Code   RO          233    i.taskInit          rt_task.o
    0x00000bd6   0x00000002   PAD
    0x00000bd8   0x00000044   Code   RO          236    i.taskSched         rt_task.o
    0x00000c1c   0x00000038   Code   RO          237    i.taskSched2Delay   rt_task.o
    0x00000c54   0x00000030   Code   RO          238    i.taskSched2Ready   rt_task.o
    0x00000c84   0x00000030   Code   RO          239    i.taskSched2Undelay  rt_task.o
    0x00000cb4   0x00000060   Code   RO          240    i.taskSched2Unready  rt_task.o
    0x00000d14   0x00000010   Code   RO           76    i.taskSwitch        switch.o
    0x00000d24   0x000000ac   Code   RO          623    i.taskTimeSliceHandler  rt_time.o
    0x00000dd0   0x00000048   Code   RO          829    i.timerCallFuncList  rt_timer.o
    0x00000e18   0x0000000a   Code   RO          451    i.timerFunc         application.o
    0x00000e22   0x00000002   PAD
    0x00000e24   0x00000058   Code   RO          831    i.timerFuncInit     rt_timer.o
    0x00000e7c   0x00000018   Code   RO          832    i.timerFuncPost     rt_timer.o
    0x00000e94   0x00000038   Code   RO          834    i.timerInit         rt_timer.o
    0x00000ecc   0x00000078   Code   RO          837    i.timerStart        rt_timer.o
    0x00000f44   0x0000002c   Code   RO          839    i.timerTaskFunc     rt_timer.o
    0x00000f70   0x00000100   Data   RO          190    .constdata          bitmap.o
    0x00001070   0x00000020   Data   RO         1155    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x0000002c, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000001   Data   RW          139    .data               lock.o
    0x20000001   0x00000003   PAD
    0x20000004   0x0000000c   Data   RW          245    .data               rt_task.o
    0x20000010   0x00000014   Data   RW          453    .data               application.o
    0x20000024   0x00000004   Data   RW          903    .data               rt_idletask.o
    0x20000028   0x00000004   Data   RW          951    .data               system_armcm3.o


    Execution Region ER_ZI (Base: 0x2000002c, Size: 0x0000743c, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000002c   0x00000180   Zero   RW          244    .bss                rt_task.o
    0x200001ac   0x00004164   Zero   RW          452    .bss                application.o
    0x20004310   0x0000000c   Zero   RW          624    .bss                rt_time.o
    0x2000431c   0x00001098   Zero   RW          840    .bss                rt_timer.o
    0x200053b4   0x00001050   Zero   RW          902    .bss                rt_idletask.o
    0x20006404   0x00000060   Zero   RW         1042    .bss                c_w.l(libspace.o)
    0x20006464   0x00000004   PAD
    0x20006468   0x00000c00   Zero   RW          940    HEAP                startup_armcm3.o
    0x20007068   0x00000400   Zero   RW          939    STACK               startup_armcm3.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       330         76          0         20      16740       3650   application.o
       230         66        256          0          0       2744   bitmap.o
        34          4          0          1          0       4401   lock.o
       136         30          0          0          0       9266   main.o
        88         14          0          0          0      24304   rt_cpu.o
       348          0          0          0          0       4082   rt_event.o
         4          0          0          4       4176       1061   rt_idletask.o
       282         30          0          0          0       5446   rt_list.o
       598         60          0         12        384       6417   rt_task.o
       232         20          0          0         12       3563   rt_time.o
       404         62          0          0       4248       3849   rt_timer.o
       194         10          0          0          0       2066   semaphore.o
        64         26        192          0       4096        840   startup_armcm3.o
       124         26          0          0          0       7069   switch.o
        16          8          0          4          0        659   system_armcm3.o

    ----------------------------------------------------------------------
      3098        432        480         44      29656      79417   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          0          3          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
       128         42          0          0          0         76   assert.o
        20          0          0          0          0         76   assert_puts.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       662         92          0          0        100       1284   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       656         92          0          0         96       1284   c_w.l

    ----------------------------------------------------------------------
       662         92          0          0        100       1284   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3760        524        480         44      29756      77265   Grand Totals
      3760        524        480         44      29756      77265   ELF Image Totals
      3760        524        480         44          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4240 (   4.14kB)
    Total RW  Size (RW Data + ZI Data)             29800 (  29.10kB)
    Total ROM Size (Code + RO Data + RW Data)       4284 (   4.18kB)

==============================================================================

